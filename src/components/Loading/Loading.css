@keyframes spin { 
  from { 
    transform: rotate(0deg); 
  } to { 
    transform: rotate(360deg); 
  }
}

@keyframes projector {
  0% { opacity: 0.5; }
  10% { opacity: 1; }
  20% { opacity: 0.8; }
  30% { opacity: 1; }
  40% { opacity: 0.95; }
  50% { opacity: 0.75; }
  60% { opacity: 1; }
  70% { opacity: 0.8; }
  80% { opacity: 0.9; }
  90% { opacity: 1; }
  100% { opacity: 0.6; }
}

@keyframes projectorError {
  0% { opacity: 0; }
  10% { opacity: 1; }
  40% { opacity: 0.95; }
  50% { opacity: 0.75; }
  80% { opacity: 0.9; }
  100% { opacity: 0; }
}

.loading,
.loadingError {
  display: flex;
  flex-direction: column;
  flex: 1 0 auto;
  position: relative;
  overflow: hidden;
  align-items: flex-end;
  background: #deb853; /* mustard */
}

.loadingError {
  background: #e06a4e; /* red */
}

.imageContainer {
  display: flex;
  flex-direction: column;
  flex: 0 0 563px;
  width: 596px;
  position: absolute;
  left: 50px;
  top: 50%;
  margin-top: -300px;

  @media (min-width: 596px) {
    position: relative;
    margin-top: 20px;
  }
}

.reel {
  position: absolute;
  top: 182px;
}

.reel1 {
  left: -1px;
}

.reel2 {
  left: 73px;
}

.projector {
  position: absolute;
}

.light {
  position: absolute;
  top: 0;
  right: 0;
}

.camera {
  position: absolute;
  top: 255px;
  left: 14px;
}

.loadingText {
  position: absolute;
  left: 165px;
  top: 267px;
  color: white;
}

.loading .reel {
  animation-name: spin;
  animation-duration: 3000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.loadingError .reel {
  animation-name: spin;
  animation-duration: 1000ms;
  animation-iteration-count: 3;
  animation-timing-function: ease-out-bounce;
}

.loading .light {
  animation-name: projector;
  animation-duration: 2000ms;
  animation-iteration-count: infinite;
  animation-timing-function: ease-out-bounce;
}

.loadingError .light {
  opacity: 0.3;
  animation-name: projectorError;
  animation-duration: 1000ms;
  animation-iteration-count: 3;
  animation-timing-function: ease-out-bounce;
}
